local a={};local b=Menu.Create("Scripts","Utility","Damage Calculator","Settings","Основные настройки");if b then a.enable=b:Switch("Включить калькулятор",true);a.killText=b:Input("Текст для убийства","Kill");a.offsetX=b:Slider("Смещение по X",-100,100,0);a.offsetY=b:Slider("Смещение по Y",-200,0,-80)end;local c=Menu.Create("Scripts","Utility","Damage Calculator","Settings","Визуальные настройки");if c then a.showSurplusDamage=c:Switch("Показывать избыточный урон",true);a.textColor=c:ColorPicker("Цвет текста",Color(255,255,255));a.showBackground=c:Switch("Показывать фон для текста",true);a.backgroundColor=c:ColorPicker("Цвет фона",Color(10,10,10,200));a.showBackground:SetCallback(function()a.backgroundColor:Visible(a.showBackground:Get())end,true)end;local d={};d.saveCharge=Menu.Find("Heroes","Hero List","Void Spirit","Main Settings","Hero Settings","Save Charge");local e=Render.LoadFont("Arial",16,Enum.FontCreate.FONTFLAG_OUTLINE);local f={};local function g(h)for i=5,1,-1 do local j=NPC.GetItem(h,"item_dagon_"..i);if j and Ability.IsReady(j)then return 400+(i-1)*100 end end;return 0 end;local function k(l)if not l or not Entity.IsHero(l)then return 0 end;local m=Hero.GetPrimaryAttribute(l);if m==Enum.Attributes.DOTA_ATTRIBUTE_STRENGTH then return Hero.GetStrengthTotal(l)end;if m==Enum.Attributes.DOTA_ATTRIBUTE_AGILITY then return Hero.GetAgilityTotal(l)end;if m==Enum.Attributes.DOTA_ATTRIBUTE_INTELLECT then return Hero.GetIntellectTotal(l)end;return 0 end;f["npc_dota_hero_skywrath_mage"]={GetDamageInfo=function(h,t)local n,o,p,q,r=0,0,0,false,0;local s=NPC.GetAbility(h,"skywrath_mage_arcane_bolt");if s and Ability.IsReady(s)then local u=(Ability.GetLevelSpecialValueFor(s,"bolt_damage")or 0)+((Ability.GetLevelSpecialValueFor(s,"int_multiplier")or 0)*Hero.GetIntellectTotal(h));n=n+u;if NPC.HasModifier(h,"modifier_item_phylactery")then n=n+150 end;if NPC.HasModifier(h,"modifier_item_angels_demise")then n=n+250 end end;local v=NPC.GetAbility(h,"skywrath_mage_concussive_shot");if v and Ability.IsReady(v)then n=n+(Ability.GetLevelSpecialValueFor(v,"damage")or 0)end;local w=NPC.GetAbility(h,"skywrath_mage_mystic_flare");if w and Ability.IsReady(w)then local x=Ability.GetLevelSpecialValueFor(w,"damage")or 0;if NPC.HasScepter(h)then x=x*2 end;n=n+x end;n=n+g(h);local y=NPC.GetItem(h,"item_ethereal_blade");if y and Ability.IsReady(y)then n=n+(1.5*k(t))+50 end;local z=NPC.GetAbility(h,"skywrath_mage_ancient_seal");if z and Ability.IsReady(z)then q=true;p=({0.2,0.25,0.3,0.35})[Ability.GetLevel(z)]or 0;local aa=NPC.GetAbility(h,"special_bonus_unique_skywrath_3");if aa and Ability.GetLevel(aa)>0 then p=p+0.1 end end;return{rawMagicDamage=n,rawPhysicalDamage=o,sealReduction=p,isSealReady=q,flameCloakAmp=r}end};f["npc_dota_hero_void_spirit"]={GetDamageInfo=function(h,t)local n,o,p=0,0,0;local q=NPC.GetAbility(h,"void_spirit_aether_remnant");if q and Ability.IsReady(q)then local r=({90,140,190,240})[Ability.GetLevel(q)]or 0;local s=NPC.GetAbility(h,"special_bonus_unique_void_spirit_2");if NPC.GetCurrentLevel(h)>=15 and s and Ability.GetLevel(s)>0 then r=r+60 end;n=n+r end;local u=NPC.GetAbility(h,"void_spirit_dissimilate");if u and Ability.IsReady(u)then local v=({120,200,280,360})[Ability.GetLevel(u)]or 0;n=n+v end;local w=NPC.GetAbility(h,"void_spirit_resonant_pulse");if w and Ability.IsReady(w)then local x=Ability.GetLevelSpecialValueFor(w,"damage")or 0;if NPC.HasScepter(h)then x=x*2 end;n=n+x end;local y=NPC.GetAbility(h,"void_spirit_astral_step");if y and Ability.IsReady(y)then local z=({130,230,330})[Ability.GetLevel(y)]or 0;if Hero.TalentIsLearned(h,Enum.TalentTypes.TALENT_8)then z=z*1.4 end;if d.saveCharge and not d.saveCharge:Get()then z=z*2 end;n=n+z end;n=n+g(h);local aa=NPC.GetItem(h,"item_ethereal_blade");if aa and Ability.IsReady(aa)then n=n+(1.5*k(t))+50 end;return{rawMagicDamage=n,rawPhysicalDamage=o,sealReduction=0,isSealReady=false,flameCloakAmp=p}end};f["npc_dota_hero_lina"]={GetDamageInfo=function(h,t)local n,o,p=0,0,0;local q=NPC.GetAbility(h,"lina_light_strike_array");local r=q and Ability.GetLevel(q)or 0;if q and Ability.IsReady(q)and r>0 then local s=({110,160,210,260})[r]or 0;local u=NPC.GetAbility(h,"special_bonus_unique_lina_3");if u and Ability.GetLevel(u)>0 then s=s+150 end;n=n+s;local v=({1,1.4,1.8,2.2})[r]or 0;local w=NPC.GetTimeToFace(h,t);local x=(Entity.GetAbsOrigin(h)-Entity.GetAbsOrigin(t)):Length2D();local y=NPC.GetAttackRange(h);local z=0;if x>y then z=(x-y)/NPC.GetMoveSpeed(h)end;local aa=w+z+NPC.GetAttackAnimPoint(h);if aa<v then local ab=1+math.floor((v-aa)/(1/NPC.GetAttacksPerSecond(h)));o=((NPC.GetTrueDamage(h)+NPC.GetTrueMaximumDamage(h))/2)*ab end end;local ac=NPC.GetAbility(h,"lina_dragon_slave");if ac and Ability.IsReady(ac)then local ad=({85,165,245,325})[Ability.GetLevel(ac)]or 0;n=n+ad end;local ae=NPC.GetAbility(h,"lina_laguna_blade");if ae and Ability.IsReady(ae)then local af=({500,750,1000})[Ability.GetLevel(ae)]or 0;n=n+af;if NPC.HasModifier(h,"modifier_item_phylactery")then n=n+150 end;if NPC.HasModifier(h,"modifier_item_angels_demise")then n=n+250 end end;if Hero.GetFacetID(h)==2 then n=n*1.25 end;local ag=15;if ae and Ability.GetLevel(ae)>0 then ag=({35,55,75})[Ability.GetLevel(ae)]or 15 end;local ah=NPC.GetAbility(h,"special_bonus_unique_lina_7");if ah and Ability.GetLevel(ah)>0 then ag=ag*1.6 end;local ai=math.floor(n/175);if ai>0 then n=n+(ai*ag)end;local aj=n+g(h);local ak=NPC.GetItem(h,"item_ethereal_blade");if ak and Ability.IsReady(ak)then aj=aj+(1.5*k(t))+50 end;local al=NPC.GetAbility(h,"lina_flame_cloak");if NPC.HasScepter(h)and(Ability.IsReady(al)or NPC.HasModifier(h,"modifier_lina_flame_cloak"))then p=(Ability.GetLevelSpecialValueFor(al,"spell_amp")or 0)/100 end;return{rawMagicDamage=aj,rawPhysicalDamage=o,sealReduction=0,isSealReady=false,flameCloakAmp=p}end};local function l(m,h,t)local n=0;if m.rawMagicDamage>0 then local o=NPC.GetMagicalArmorValue(t);local p=(1-o);if m.isSealReady then p=p*(1+m.sealReduction)end;if NPC.HasModifier(h,"modifier_item_whisper_of_the_dread")then p=p*1.1 end;local q=NPC.GetItem(h,"item_ethereal_blade");if q and Ability.IsReady(q)then p=p*1.4 end;if m.flameCloakAmp>0 then p=p*(1+m.flameCloakAmp)end;n=m.rawMagicDamage*p end;local r=0;if m.rawPhysicalDamage>0 then local s=NPC.GetPhysicalArmorValue(t);local u=1-((0.06*s)/(1+0.06*math.abs(s)));r=m.rawPhysicalDamage*u end;return n+r end;local function m()if not a.enable or not a.enable:Get()then return end;local h=Heroes.GetLocal();if not h then return end;local v=Entity.GetTeamNum(h);if not v then return end;local w=NPC.GetUnitName(h);local x=f[w];if not x then return end;for _,t in pairs(Heroes.GetAll())do if Entity.GetTeamNum(t)~=v and Entity.IsAlive(t)and NPC.IsVisible(t)and not NPC.IsIllusion(t)then local y=x.GetDamageInfo(h,t);local z=l(y,h,t);local aa=Entity.GetHealth(t);local ab=0;local ac=NPC.GetBarriers(t);if ac then ab=ac.magic.current+ac.all.current end;local ad=NPC.GetHealthRegen(t)*3;local ae=aa+ab+ad;if z>ae then local af=Entity.GetAbsOrigin(t)+Vector(0,0,NPC.GetHealthBarOffset(t));local ag,ah=Render.WorldToScreen(af);if ah then local ai=a.killText:Get();if a.showSurplusDamage:Get()then ai=ai.." (+"..math.floor(z-ae)..")"end;local aj=a.textColor:Get();local ak=Render.TextSize(e,16,ai);local al=ag.x-(ak.x/2)+a.offsetX:Get();local am=ag.y+a.offsetY:Get();if a.showBackground:Get()then local an=5;local ao=Vec2(al-an,am-an);local ap=Vec2(al+ak.x+an,am+ak.y+an);Render.FilledRect(ao,ap,a.backgroundColor:Get(),4)end;Render.Text(e,16,ai,Vec2(al+1,am+1),Color(0,0,0,aj.a));Render.Text(e,16,ai,Vec2(al,am),aj)end end end end end;return{OnDraw=m}